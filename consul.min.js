(function(e,r){if(typeof define==="function"&&define.amd){define(["exports"],r)}else if(typeof exports==="object"){r(exports);if(typeof module==="object"&&module!==null){module.exports=exports=exports.resilientConsul}}else{r(e)}})(this,function(e){var r="/v1/catalog/service/";var t=["service","servers"];var i=["service","datacenter","protocol","tag"];e.resilientConsul=function(e){var n="discovery";e=e||{};t.forEach(function(r){if(!e[r]){throw new TypeError("Missing required param: "+r)}});e.basePath=r+e.service;if(e.discoveryService){e.refreshPath=r+e.discoveryService;e.enableSelfRefresh=true}function o(r,t){s(r);function i(e,r,t){if(e)return t();if(Array.isArray(r.data)){r.data=a(r.data)}t()}function n(r,t){r.params=r.params||{};if(e.datacenter){r.params.dc=e.datacenter}if(e.tag){r.params.tag=e.tag}t()}return{"in":i,out:n}}o.type=n;return o;function a(r){var t=e.protocol||"http";return r.filter(function(e){return e&&e.Address}).map(function(e){if(e.ServiceAddress){return e.ServiceAddress}return t+"://"+e.Address+":"+(+e.ServicePort||80)})}function s(r){Object.keys(e).filter(function(e){return!~i.indexOf(e)}).forEach(function(t){r.set(t,e[t])})}}});
//# sourceMappingURL=http://cdn.rawgit.com/h2non/consul/master/consul.min.js.map