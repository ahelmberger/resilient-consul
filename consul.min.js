(function(e,r){if(typeof define==="function"&&define.amd){define(["exports"],r)}else if(typeof exports==="object"){r(exports);if(typeof module==="object"&&module!==null){module.exports=exports=exports.resilientConsul}}else{r(e)}})(this,function(e){var r="/v1/catalog/service/";var t=["service","servers"];var n=["service","datacenter","protocol","tag","mapServers"];e.resilientConsul=function(e){e=e||{};t.filter(function(r){return!e[r]}).forEach(function(e){throw new TypeError("Missing required param: "+e)});e.basePath=r+e.service;e.mapServers=e.mapServers||o;if(e.discoveryService){e.refreshPath=r+e.discoveryService;e.enableSelfRefresh=true}i.type="discovery";function i(r,t){a(r);function n(r,t,n){if(r)return n();if(Array.isArray(t.data)){t.data=e.mapServers(t.data)}n()}function i(r,t){r.params=r.params||{};if(e.datacenter){r.params.dc=e.datacenter}if(e.tag){r.params.tag=e.tag}t()}return{"in":n,out:i}}return i;function o(r){var t=e.protocol||"http";return r.filter(function(e){return e&&e.Address}).map(function(e){if(e.ServiceAddress){return e.ServiceAddress}return t+"://"+e.Address+":"+(+e.ServicePort||80)})}function a(r){Object.keys(e).filter(function(e){return!~n.indexOf(e)}).forEach(function(t){r.set(t,e[t])})}}});
//# sourceMappingURL=http://cdn.rawgit.com/h2non/consul/master/consul.min.js.map
